"use strict";(self.webpackChunkcocokits=self.webpackChunkcocokits||[]).push([[3273],{"./apps/angular-kits-doc/stories/ui-components/avatar/avatar/index.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomTemplate:()=>CustomTemplate,Default:()=>Default,__namedExportsOrder:()=>index_stories_namedExportsOrder,default:()=>index_stories});var dist=__webpack_require__("./node_modules/.pnpm/@storybook+angular@8.6.11_x62rwhiwqcfepzdyvh7zcg7cfq/node_modules/@storybook/angular/dist/index.mjs"),avatar_component=__webpack_require__("./packages/angular/avatar/src/lib/avatar/avatar.component.ts"),avatar_tmpl_directive=__webpack_require__("./packages/angular/avatar/src/lib/avatar/avatar.tmpl-directive.ts"),src=__webpack_require__("./packages/internal/storybook-addon-theme-angular/src/index.ts");var storybook_addon_theme_src=__webpack_require__("./packages/internal/storybook-addon-theme/src/index.ts");const Default={name:"Default",parameters:{docs:{description:{story:"Shows the default example with no additional configurations, providing an interactive example in its most basic form."}},cckAddon:{renderConditions:[(0,storybook_addon_theme_src.RS)("Overview")],source:[{filename:"example.component.ts",language:"angular-ts",code:'\n            import { Component } from "@angular/core";\n            import { AvatarComponent } from \'@cocokits/angular-components\';\n\n            @Component({\n              selector: \'example-component\',\n              imports: [AvatarComponent],\n              template: `\n                <cck-avatar\n                  <% if (typeof type !== \'undefined\') { %> type=\'<%= type %>\' <% } %>\n                  <% if (typeof size !== \'undefined\') { %> size=\'<%= size %>\' <% } %>\n                  <% if (typeof color !== \'undefined\') { %> color=\'<%= color %>\' <% } %>\n                  <% if (src) { %> src="<%= src %>" <% } %>\n                  <% if (!src && label) { %> label="<%= label %>" <% } %>\n                  <% if (src && placeholderSrc) { %> [placeholderSrc]="placeholder" <% } %>\n                  <% if (src && fallbackSrc) { %> [fallbackSrc]="fallback" <% } %>\n                  <% if (alt) { %> alt="<%= alt %>" <% } %>\n                  <% if (clickable) { %> [clickable]="<%= clickable %>" <% } %>\n                />\n              `,\n            })\n            export class ExampleComponent {\n              <% if (placeholderSrc) { %> protected placeholder="<%= placeholderSrc %>"; <% } %>\n              <% if (fallbackSrc) { %> protected fallback="<%= fallbackSrc %>"; <% } %>\n            }\n          '}],hasControl:!0,controls:[storybook_addon_theme_src.Sn.type(),storybook_addon_theme_src.Sn.color(),storybook_addon_theme_src.Sn.size(),storybook_addon_theme_src.Sn.label(""),storybook_addon_theme_src.Sn.alt("Image alt"),storybook_addon_theme_src.Sn.srcUrl(),storybook_addon_theme_src.Sn.placeholderSrc(),storybook_addon_theme_src.Sn.fallbackSrc(),storybook_addon_theme_src.Sn.clickable(),storybook_addon_theme_src.Sn.additional()]}},render:args=>({props:{...args},template:`\n        <cck-avatar\n          ${(0,src.FQ)(args)}\n          [src]="cckControl.src"\n          [alt]="cckControl.alt"\n          [label]="cckControl.label"\n          [placeholderSrc]="cckControl.placeholderSrc"\n          [fallbackSrc]="cckControl.fallbackSrc"\n          [clickable]="cckControl.clickable"\n        />\n      `})},CustomTemplate={name:"CustomTemplate",parameters:{docs:{description:{story:"Shows an example of custom content."}},cckAddon:{renderConditions:[(0,storybook_addon_theme_src.RS)("Overview")],source:[{filename:"example.component.ts",language:"angular-ts",code:'\n            import { Component } from "@angular/core";\n            import { AvatarComponent, AvatarTemplateDirective } from \'@cocokits/angular-components\';\n\n            @Component({\n              selector: \'example-component\',\n              imports: [AvatarComponent, AvatarTemplateDirective],\n              template: `\n                <cck-avatar size="<%= size %>">\n                  <ng-template cckAvatar>\n                    <div class="avatar-wrapper">\n                    <img src="https://i.pravatar.cc/100?img=5" class="avatar-image" />\n                    <img src="https://i.pravatar.cc/100?img=12" class="avatar-image" />\n                    </div>\n                  </ng-template>\n                </cck-avatar>\n              `,\n              styles: [`\n    .avatar-wrapper {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      width: 100%;\n      height: 100%;\n      gap: 2px;\n    }\n    .avatar-image {\n      object-fit: cover;\n      width: 100%;\n      height: 100%\n    }\n    `],\n            })\n            export class ExampleComponent {\n            }\n          '}],hasControl:!1,singleControls:["size"],controls:[storybook_addon_theme_src.Sn.size()]}},render:args=>({props:{...args},template:'\n        <cck-avatar [size]="cckControl.size">\n          <ng-template cckAvatar>\n            <div style="display: grid; grid-template-columns: 1fr 1fr; width: 100%; height: 100%; gap: 2px;">\n            <img src="https://i.pravatar.cc/100?img=5" style="object-fit: cover; width: 100%; height: 100%" />\n            <img src="https://i.pravatar.cc/100?img=12" style="object-fit: cover; width: 100%; height: 100%" />\n            </div>\n          </ng-template>\n        </cck-avatar>\n      '})},index_stories={component:avatar_component.f,title:"UI Components/Avatar",tags:["status:new"],decorators:[(0,dist.applicationConfig)({providers:[(0,src.Zs)()]}),(0,dist.moduleMetadata)({imports:[avatar_tmpl_directive.t]})],parameters:{docs:{description:{component:["A visual representation of users that displays profile images, name initials, or custom content through templates. These components handle common user representation scenarios like profile pictures in navigation bars, while providing full control for advanced cases such as custom fallback UIs or loading states. The template support enables developers to override default behaviors while maintaining design system consistency.\r\n"].join("\n")}},cckAddon:{componentName:"avatar",ngTemplateMarkdown:'#### Custom Avatar Content\r\nUse this template to display custom content inside the avatar component. This is useful for advanced scenarios, such as displaying multiple images as a single avatar, or having full control over the avatar\'s image rendering and logic.\r\n\r\n**Selector:** `ng-template[cckAvatar]`  \r\n**Reference:** `AvatarTemplateDirective`\r\n\r\n**Context Properties:**\r\n\r\nThis template does not provide any context properties.\r\n\r\n\r\n<br/>\r\n**Usage Example:**\r\n\r\n```html\r\n<cck-avatar>\r\n  <ng-template cckAvatar>\r\n    <picture>\r\n      <source media="(min-width: 1024px)" srcset="assets/avatar-large1.jpg">\r\n      <source media="(min-width: 600px)" srcset="assets/avatar-medium1.jpg">\r\n      <img src="assets/avatar-small1.jpg" alt="User avatar">\r\n    </picture>\r\n  </ng-template>\r\n</cck-avatar>\r\n```\r\n\r\n**Important:** When a custom template is provided, all default content, css selectors, styles, and component configurations related to child elements will be removed. Only your custom template and the host component will be rendered.'}},argTypes:{src:{table:{type:{summary:"string"}}},alt:{table:{type:{summary:"string"}}},fallbackSrc:{table:{type:{summary:"string"}}},placeholderSrc:{table:{type:{summary:"string"}}},label:{table:{type:{summary:"string"}}},clickable:{table:{type:{summary:"string"}}}}},index_stories_namedExportsOrder=["Default","CustomTemplate"]}}]);