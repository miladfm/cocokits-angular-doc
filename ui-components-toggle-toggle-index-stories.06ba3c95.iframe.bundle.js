(self.webpackChunkcocokits=self.webpackChunkcocokits||[]).push([[459],{"./packages/angular/core/src/ui-base.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{W:()=>_UiBaseComponent});var tslib_es6=__webpack_require__("./node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/.pnpm/@angular+core@18.2.0_rxjs@7.8.1_zone.js@0.14.10/node_modules/@angular/core/fesm2022/core.mjs"),src=__webpack_require__("./packages/common/utils/src/index.ts");function generateResult(host,prefix){const attrs=Object.values(host.nativeElement.attributes).filter((attrName=>attrName.name.startsWith(prefix)));return(0,src.xW)(attrs,(attr=>({[attr.name.replace(prefix,"")]:attr.value})))}var core_src=__webpack_require__("./packages/common/core/src/index.ts"),tokens=__webpack_require__("./packages/angular/core/src/tokens.ts");let _UiBaseComponent=class _UiBaseComponent{constructor(){this.themeConfig=(0,core.inject)(tokens.f),this._type=(0,core.input)(void 0,{alias:"type"}),this._size=(0,core.input)(void 0,{alias:"size"}),this._color=(0,core.input)(void 0,{alias:"color"}),this._additional=function fromAttrWithPrefix(prefix){const host=(0,core.inject)(core.ElementRef),value=(0,core.signal)(generateResult(host,prefix)),observer=new MutationObserver((function(mutations){mutations.forEach((function(mutation){const attrName=mutation.attributeName;"attributes"===mutation.type&&attrName&&attrName.startsWith(prefix)&&value.set(generateResult(host,prefix))}))}));return observer.observe(host.nativeElement,{attributes:!0}),(0,core.inject)(core.DestroyRef).onDestroy((()=>observer.disconnect())),value.asReadonly()}("data-cck-"),this.type=(0,core.computed)((()=>this._type())),this.size=(0,core.computed)((()=>this._size())),this.color=(0,core.computed)((()=>this._color())),this.additional=(0,core.computed)((()=>this._additional())),this.classNames=(0,core.computed)((()=>(0,core_src.Zz)(this.componentName,{type:this.baseClassOptions.skipType?null:this.type(),size:this.baseClassOptions.skipSize?null:this.size(),color:this.baseClassOptions.skipColor?null:this.color(),additional:this.baseClassOptions.skipAdditional?void 0:this.additional()},this.themeConfig))),this.hostClassNames=(0,core.computed)((()=>[this.classNames().host,...this.extraHostElementClassConditions().filter((condition=>condition.if)).map((condition=>condition.classes))].join(" "))),this.baseClassOptions={skipType:!1,skipColor:!1,skipSize:!1,skipAdditional:!1}}static{this.propDecorators={_type:[{type:core.Input,args:[{isSignal:!0,alias:"type",required:!1,transform:void 0}]}],_size:[{type:core.Input,args:[{isSignal:!0,alias:"size",required:!1,transform:void 0}]}],_color:[{type:core.Input,args:[{isSignal:!0,alias:"color",required:!1,transform:void 0}]}]}}};_UiBaseComponent=(0,tslib_es6.Cg)([(0,core.Directive)()],_UiBaseComponent)},"./node_modules/.pnpm/css-loader@7.1.2_webpack@5.93.0_@swc+core@1.5.7_@swc+helpers@0.5.13__esbuild@0.23.0_/node_modules/css-loader/dist/runtime/api.js":module=>{"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/.pnpm/css-loader@7.1.2_webpack@5.93.0_@swc+core@1.5.7_@swc+helpers@0.5.13__esbuild@0.23.0_/node_modules/css-loader/dist/runtime/noSourceMaps.js":module=>{"use strict";module.exports=function(i){return i[1]}},"./apps/angular-kits-doc/stories/ui-components/toggle/toggle/index.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Color:()=>Color,Default:()=>Default,Size:()=>Size,Type:()=>Type,__namedExportsOrder:()=>index_stories_namedExportsOrder,default:()=>index_stories});var dist=__webpack_require__("./node_modules/.pnpm/@storybook+angular@8.4.4_tlab56kpzc4x53ckajowhhfrq4/node_modules/@storybook/angular/dist/index.mjs"),ui_base_component=__webpack_require__("./packages/angular/core/src/ui-base.component.ts"),tslib_es6=__webpack_require__("./node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs");var toggle_componentngResource=__webpack_require__("./packages/angular/toggle/src/lib/toggle/toggle.component.scss?ngResource"),toggle_componentngResource_default=__webpack_require__.n(toggle_componentngResource),core=__webpack_require__("./node_modules/.pnpm/@angular+core@18.2.0_rxjs@7.8.1_zone.js@0.14.10/node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/.pnpm/@angular+forms@18.2.0_@angular+common@18.2.0_@angular+core@18.2.0_rxjs@7.8.1_zone.js@0.14.10__sbz7jv6ol3znvubiinn6qeqfj4/node_modules/@angular/forms/fesm2022/forms.mjs"),src=__webpack_require__("./packages/common/utils/src/index.ts");let NEXT_ID=1;const TOGGLE_CONTROL_VALUE_ACCESSOR={provide:fesm2022_forms.kq,useExisting:(0,core.forwardRef)((()=>ToggleComponent)),multi:!0};let ToggleComponent=class ToggleComponent extends ui_base_component.W{constructor(){super(...arguments),this.componentName="toggle",this.extraHostElementClassConditions=(0,core.computed)((()=>[{if:this.disabled(),classes:this.classNames().disabled},{if:this.checked(),classes:this.classNames().checked},{if:!this.checked(),classes:this.classNames().unchecked},{if:"before"===this.labelPosition(),classes:this.classNames().labelBefore}])),this.cd=(0,core.inject)(core.ChangeDetectorRef),this.elemRef=(0,core.inject)(core.ElementRef),this.id=(0,core.input)("TOGGLE_"+NEXT_ID++),this.labelPosition=(0,core.input)("after"),this.checked=(0,core.model)(!1),this._disabled=(0,core.model)(void 0,{alias:"disabled"}),this.disabled=(0,core.computed)((()=>(0,src.Ix)(this._disabled()))),this.change=(0,core.output)(),this.onTouched=()=>{},this.controlValueAccessorChangeFn=()=>{}}toggle(){this.setChecked(!this.checked())}setChecked(checked){this.checked()!==checked&&(this.checked.set(checked),this.controlValueAccessorChangeFn(checked),this.change.emit({checked}))}onHostClick(event){event.target===this.elemRef.nativeElement&&this.toggle()}onInputClick(){this.toggle()}onInteractionEvent(event){event.stopPropagation()}onBlur(){Promise.resolve().then((()=>{this.onTouched(),this.cd.markForCheck()}))}writeValue(value){this.checked.set(!!value)}registerOnChange(fn){this.controlValueAccessorChangeFn=fn}registerOnTouched(fn){this.onTouched=fn}setDisabledState(isDisabled){this._disabled.set(isDisabled)}static{this.propDecorators={id:[{type:core.Input,args:[{isSignal:!0,alias:"id",required:!1,transform:void 0}]}],labelPosition:[{type:core.Input,args:[{isSignal:!0,alias:"labelPosition",required:!1,transform:void 0}]}],checked:[{type:core.Input,args:[{isSignal:!0,alias:"checked",required:!1}]},{type:core.Output,args:["checkedChange"]}],_disabled:[{type:core.Input,args:[{isSignal:!0,alias:"disabled",required:!1}]},{type:core.Output,args:["disabledChange"]}],change:[{type:core.Output,args:["change"]}]}}};ToggleComponent=(0,tslib_es6.Cg)([(0,core.Component)({standalone:!0,imports:[],selector:"cck-toggle",template:'<label [class]="classNames().label" [for]="id()">\r\n  <div [class]="classNames().sliderWrapper">\r\n    <input\r\n      type="checkbox"\r\n      [class]="classNames().input"\r\n      [checked]="checked()"\r\n      [disabled]="disabled()"\r\n      [id]="id()"\r\n      (blur)="onBlur()"\r\n      (click)="onInputClick()"\r\n      (change)="onInteractionEvent($event)" />\r\n\r\n    <div [class]="classNames().thumb"></div>\r\n    <div [class]="classNames().backdrop"></div>\r\n  </div>\r\n\r\n  <ng-content></ng-content>\r\n</label>\r\n',changeDetection:core.ChangeDetectionStrategy.OnPush,encapsulation:core.ViewEncapsulation.None,providers:[TOGGLE_CONTROL_VALUE_ACCESSOR],host:{"[class]":"hostClassNames()","(click)":"onHostClick($event)"},styles:[toggle_componentngResource_default()]})],ToggleComponent);var storybook_addon_theme_angular_src=__webpack_require__("./packages/internal/storybook-addon-theme-angular/src/index.ts");var storybook_addon_theme_src=__webpack_require__("./packages/internal/storybook-addon-theme/src/index.ts");const Default={name:"Default",parameters:{docs:{description:{story:"Shows the default example with no additional configurations, providing an interactive example in its most basic form."}},cckAddon:{renderConditions:[(0,storybook_addon_theme_src.RS)("Overview")],source:[{filename:"example.component.html",language:"angular-html",code:"\n            <cck-toggle\n              <% if (checked) { %> [checked]='<%= checked %>' <% } %>\n              labelPosition=\"<%= labelPosition %>\"\n              <% if(disabled) { %> disabled <% } %>\n              <% if (typeof type !== 'undefined') { %> type='<%= type %>' <% } %>\n              <% if (typeof size !== 'undefined') { %> size='<%= size %>' <% } %>\n              <% if (typeof color !== 'undefined') { %> color='<%= color %>' <% } %>\n            >\n              <%= text %>\n            </cck-toggle>\n          "}],hasControl:!0,controls:[{displayName:"Text",default:"Slide Me!",storyArgKey:"text",type:storybook_addon_theme_src.YA.Text},{displayName:"Label Position",default:"before",options:["before","after"],storyArgKey:"labelPosition",type:storybook_addon_theme_src.YA.Select},{prop:"type",type:storybook_addon_theme_src.YA.SelectThemeConfig},{prop:"color",type:storybook_addon_theme_src.YA.SelectThemeConfig},{prop:"size",type:storybook_addon_theme_src.YA.SelectThemeConfig},{prop:"additional",type:storybook_addon_theme_src.YA.SelectThemeConfig},{displayName:"Disabled",default:!1,storyArgKey:"disabled",type:storybook_addon_theme_src.YA.Boolean},{displayName:"Checked",default:!1,storyArgKey:"checked",type:storybook_addon_theme_src.YA.Boolean}]}},render:args=>({props:{...args},template:`\n      <cck-toggle\n        [checked]="cckControl.checked"\n        [labelPosition]="cckControl.labelPosition"\n        [disabled]="cckControl.disabled"\n        ${(0,storybook_addon_theme_angular_src.FQ)(args)}>\n        {{cckControl.text}}\n      </cck-toggle>\n    `})},Type={name:"Type",parameters:{docs:{description:{story:"Displays variations in appearance and functionality, demonstrating how different types can be used to create unique button styles."}},cckAddon:{renderConditions:[(0,storybook_addon_theme_src.Du)("type"),(0,storybook_addon_theme_src.RS)("Overview")],source:[{filename:"example.component.html",language:"angular-html",code:'\n          <% themeComponentConfig.type.values.map(type => { %>\n            <cck-toggle type="<%= type %>">Slide Me!</cck-toggle>\n          <% }) %>\n          '}]}},render:args=>({props:{...args},template:'\n      @for (type of cckControl.themeComponentConfig?.type?.values; let col = $index; track type) {\n        <cck-toggle [type]="type">{{type}}</cck-toggle>\n      }\n    '})},Size={name:"Size",parameters:{docs:{description:{story:"The size is adjustable to suit different design needs and screen dimensions, improving both aesthetics and usability."}},cckAddon:{renderConditions:[(0,storybook_addon_theme_src.Du)("size"),(0,storybook_addon_theme_src.RS)("Overview")],singleControls:["type"],source:[{filename:"example.component.html",language:"angular-html",code:"\n          <% themeComponentConfig.size.values.map(size => { %>\n            <cck-toggle\n              size=\"<%= size %>\"\n              <% if (typeof type !== 'undefined') { %> type='<%= type %>' <% } %>\n            >\n              Slide Me!\n            </cck-toggle>\n          <% }) %>\n          "}],controls:[{prop:"type",type:storybook_addon_theme_src.YA.SelectThemeConfig}]}},render:args=>({props:{...args},template:'\n      @for (size of cckControl.themeComponentConfig.size.values; let col = $index; track size) {\n        <cck-toggle checked="true" [size]="size" [type]="cckControl.type"></cck-toggle>\n      }\n    '})},Color={name:"Color",parameters:{docs:{description:{story:"Color options enable seamless integration with various themes or to highlight specific actions."}},cckAddon:{renderConditions:[(0,storybook_addon_theme_src.Du)("color"),(0,storybook_addon_theme_src.RS)("Overview")],singleControls:["type"],source:[{filename:"example.component.html",language:"angular-html",code:"\n          <% themeComponentConfig.color.values.map(color => { %>\n            <cck-toggle\n              color=\"<%= color %>\"\n              <% if (typeof type !== 'undefined') { %> type='<%= type %>' <% } %>\n            >\n              Slide Me!\n            </cck-toggle>\n          <% }) %>\n          "}],controls:[{prop:"type",type:storybook_addon_theme_src.YA.SelectThemeConfig}]}},render:args=>({props:{...args},template:'\n      @for (color of cckControl.themeComponentConfig.color.values; let col = $index; track color) {\n        <cck-toggle checked="true" [color]="color" [type]="cckControl.type"></cck-toggle>\n      }\n    '})},index_stories={component:ToggleComponent,subcomponents:[ui_base_component.W],title:"UI Components/Toggle",decorators:[(0,dist.applicationConfig)({providers:[(0,storybook_addon_theme_angular_src.Zs)()]}),(0,dist.moduleMetadata)({imports:[]})],parameters:{docs:{description:{component:["The `ToggleComponent` from `@cocokits` is a simple yet powerful UI control that allows users to switch a single option on or off. Commonly used to activate or deactivate settings, toggles provide a clear and intuitive way to manage binary options, enhancing user control over specific preferences or features. This component seamlessly integrates with multiple design system themes, ensuring a consistent and visually cohesive experience across various applications."].join("\n")}},cckAddon:{componentName:"toggle"}},argTypes:{_disabled:{table:{type:{summary:"boolean"},defaultValue:{summary:""}}}}},index_stories_namedExportsOrder=["Default","Type","Size","Color"]},"./packages/angular/toggle/src/lib/toggle/toggle.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/.pnpm/css-loader@7.1.2_webpack@5.93.0_@swc+core@1.5.7_@swc+helpers@0.5.13__esbuild@0.23.0_/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/.pnpm/css-loader@7.1.2_webpack@5.93.0_@swc+core@1.5.7_@swc+helpers@0.5.13__esbuild@0.23.0_/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);