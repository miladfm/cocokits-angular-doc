"use strict";(self.webpackChunkcocokits=self.webpackChunkcocokits||[]).push([[703],{"./apps/angular-kits-doc/stories/ui-components/radio/radio-group/index.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Color:()=>Color,Default:()=>Default,Size:()=>Size,Type:()=>Type,__namedExportsOrder:()=>index_stories_namedExportsOrder,default:()=>index_stories});var dist=__webpack_require__("./node_modules/.pnpm/@storybook+angular@8.4.4_7atefxoeilqy4tltjvplfd7liu/node_modules/@storybook/angular/dist/index.mjs"),radio_component=__webpack_require__("./packages/angular/radio/src/lib/radio/radio.component.ts"),src=__webpack_require__("./packages/internal/storybook-addon-theme-angular/src/index.ts");var storybook_addon_theme_src=__webpack_require__("./packages/internal/storybook-addon-theme/src/index.ts");const Default={name:"Default",parameters:{docs:{description:{story:"Shows the default example with no additional configurations, providing an interactive example in its most basic form."}},cckAddon:{renderConditions:[(0,storybook_addon_theme_src.RS)("Overview")],source:[{filename:"example.component.html",language:"angular-html",code:"\n            <cck-radio-group\n              <% if (typeof type !== 'undefined') { %> type='<%= type %>' <% } %>\n              <% if (typeof size !== 'undefined') { %> size='<%= size %>' <% } %>\n              <% if (typeof color !== 'undefined') { %> color='<%= color %>' <% } %>\n              <% if (selected !== 'None') { %> selected='<%= selected %>' <% } %>\n              <% if (disabled) { %> disabled <% } %>\n             >\n                <cck-radio-button value=\"Radio-1\">Radio Button 1</cck-radio-button>\n                <cck-radio-button value=\"Radio-2\">Radio Button 2</cck-radio-button>\n                <cck-radio-button value=\"Radio-3\">Radio Button 3</cck-radio-button>\n            </cck-radio-group>\n          "}],hasControl:!0,controls:[storybook_addon_theme_src.Sn.type(),storybook_addon_theme_src.Sn.color(),storybook_addon_theme_src.Sn.size(),storybook_addon_theme_src.Sn.additional(),storybook_addon_theme_src.Sn.disabled(!1),{displayName:"Selected",default:"Radio-1",options:["None","Radio-1","Radio-2","Radio-3"],storyArgKey:"selected",type:storybook_addon_theme_src.YA.Select}]}},render:args=>({props:{...args},template:`\n      <cck-radio-group\n        [disabled]="cckControl.disabled"\n        [selected]="cckControl.selected"\n        ${(0,src.FQ)(args)}>\n          <cck-radio-button value="Radio-1">Radio Button 1</cck-radio-button>\n          <cck-radio-button value="Radio-2">Radio Button 2</cck-radio-button>\n          <cck-radio-button value="Radio-3">Radio Button 3</cck-radio-button>\n      </cck-radio-group>\n    `})},Type={name:"Type",parameters:{docs:{description:{story:"Displays variations in appearance and functionality, demonstrating how different types can be used to create unique button styles."}},cckAddon:{renderConditions:[(0,storybook_addon_theme_src.Du)("type"),(0,storybook_addon_theme_src.RS)("Overview")],source:[{filename:"example.component.html",language:"angular-html",code:'\n            <% themeComponentConfig.type.values.map(type => { %>\n              <cck-radio-group type="<%= type %>">\n                <cck-radio-button value="Radio-1">Radio Button 1</cck-radio-button>\n                <cck-radio-button value="Radio-2">Radio Button 2</cck-radio-button>\n                <cck-radio-button value="Radio-3">Radio Button 3</cck-radio-button>\n              </cck-radio-group>\n            <% }) %>\n          '}]}},render:args=>({props:{...args},template:'\n       @for (type of cckControl.themeComponentConfig.type.values; let col = $index; track type) {\n        <cck-radio-group [type]="type" [selected]="1">\n          <cck-radio-button value="Radio-1">Radio Button 1</cck-radio-button>\n          <cck-radio-button value="Radio-2">Radio Button 2</cck-radio-button>\n          <cck-radio-button value="Radio-3">Radio Button 3</cck-radio-button>\n        </cck-radio-group>\n      }\n    '})},Size={name:"Size",parameters:{docs:{description:{story:"The size is adjustable to suit different design needs and screen dimensions, improving both aesthetics and usability."}},cckAddon:{renderConditions:[(0,storybook_addon_theme_src.Du)("size"),(0,storybook_addon_theme_src.RS)("Overview")],singleControls:["type"],source:[{filename:"example.component.html",language:"angular-html",code:'\n          <% themeComponentConfig.size.values.map(size => { %>\n            <cck-radio-group\n              <% if (typeof type !== \'undefined\') { %> type=\'<%= type %>\' <% } %>\n              size="<%= size %>"\n            >\n              <cck-radio-button value="Radio-1">Radio Button 1</cck-radio-button>\n              <cck-radio-button value="Radio-2">Radio Button 2</cck-radio-button>\n              <cck-radio-button value="Radio-3">Radio Button 3</cck-radio-button>\n            </cck-radio-group>\n          <% }) %>\n          '}],controls:[storybook_addon_theme_src.Sn.type()]}},render:args=>({props:{...args},template:'\n      @for (size of cckControl.themeComponentConfig.size.values; let col = $index; track size) {\n        <cck-radio-group\n          [type]="cckControl.type"\n          [size]="size">\n            <cck-radio-button value="Radio-1">{{cckControl.type}} Radio Button 1</cck-radio-button>\n            <cck-radio-button value="Radio-2">{{cckControl.type}} Radio Button 2</cck-radio-button>\n            <cck-radio-button value="Radio-3">{{cckControl.type}} Radio Button 3</cck-radio-button>\n        </cck-radio-group>\n      }\n    '})},Color={name:"Color",parameters:{docs:{description:{story:"Color options enable seamless integration with various themes or to highlight specific actions."}},cckAddon:{renderConditions:[(0,storybook_addon_theme_src.Du)("color"),(0,storybook_addon_theme_src.RS)("Overview")],singleControls:["type"],source:[{filename:"example.component.html",language:"angular-html",code:'\n          <% themeComponentConfig.color.values.map(color => { %>\n            <cck-radio-group\n              <% if (typeof type !== \'undefined\') { %> type=\'<%= type %>\' <% } %>\n              color="<%= color %>"\n            >\n              <cck-radio-button value="Radio-1">Radio Button 1</cck-radio-button>\n              <cck-radio-button value="Radio-2">Radio Button 2</cck-radio-button>\n              <cck-radio-button value="Radio-3">Radio Button 3</cck-radio-button>\n            </cck-radio-group>\n          <% }) %>\n          '}],controls:[storybook_addon_theme_src.Sn.type()]}},render:args=>({props:{...args},template:'\n      @for (color of cckControl.themeComponentConfig.color.values; let col = $index; track color) {\n        <cck-radio-group\n          [type]="cckControl.type"\n          [color]="color">\n            <cck-radio-button value="Radio-1">Radio Button 1</cck-radio-button>\n            <cck-radio-button value="Radio-2">Radio Button 2</cck-radio-button>\n            <cck-radio-button value="Radio-3">Radio Button 3</cck-radio-button>\n        </cck-radio-group>\n      }\n    '})},index_stories={component:radio_component.Y2,title:"UI Components/RadioGroup",decorators:[(0,dist.applicationConfig)({providers:[(0,src.Zs)()]}),(0,dist.moduleMetadata)({imports:[radio_component.dx]})],parameters:{docs:{description:{component:["The `RadioGroupComponent` from `@cocokits` is a container that organizes multiple `RadioButton` components, allowing users to select a single option from a group of two or more items. This component ensures that only one option can be selected at a time, providing a clear and intuitive way to handle mutually exclusive choices within forms or settings. It integrates seamlessly with multiple design system themes, ensuring a cohesive and accessible user experience across different application styles."].join("\n")}},cckAddon:{componentName:"radioGroup"}},argTypes:{_disabled:{table:{type:{summary:"boolean"},defaultValue:{summary:""}}},change:{table:{category:"outputs"}}}},index_stories_namedExportsOrder=["Default","Type","Size","Color"]}}]);