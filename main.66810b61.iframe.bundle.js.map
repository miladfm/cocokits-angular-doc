{"version":3,"file":"main.66810b61.iframe.bundle.js","mappings":";;;;;;;;AAuBA;;;;;AAeA;;;;;;;;;AAUA;;;;;;;;;AAUA;;;;;;;;;AAUA;;;;;;;;ACjEA;;;;;;AAyBA;;;;;;AAMA;;;;AAIA;;;AAIA;;;;AAKA;;;;AAKA;;;AAIA;;;AAIA;;;AAIA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACsCA;;;;;;;;;;;;;;;;;;ACvFA;;;;;;;;;AAUA;;;;;;;AAQA;;;;;;;;;;;;;;;AAgBA;;;;;AAMA;;AAGA;;;;;;;;;;;;AC/CA;;;;;;;;;AC8BA;;;;;;;;AASA;;;AAIA;;;;;;;;;;;;;;;;;;;;;ACrDA;;;;;;;;;;;;;;AAmBA;;;;;;;;;;;;ACsCA;;;AAIA;;;;;;;;;AAUA;;;;;;;;;;AAWA;;;;;;;AAQA;;AAEA;;;;;;;;;AASA;;ACpGA;;;;;;AAYA;;;;;;;;;AAUA;;;;AAKA;;;;;;;;AASA;;;;;;;;;;;;;;;;;;;;;;AC/BA;;;;;;;;;;ACPA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKA;;;;;;;;;;;;;;;;;;;;;ACuBA;;;;;;;;;;AAYA;;;;;AAMA;;;;;;AAOA;;;AAIA;;;;;;;;;;;;;;;;;;ACnDA;;;;;AAoEA;;;;;AAMA;;;;;;;;AASA;;;;;;;AAQA;;;;;;;;;;AAWA;;;;;;AAOA;;;;AAKA;;;;;;ACnHA;;;AAwDA;;AChEA;;;;;;;;;ACmDA;;;;ACjDA;;;;;;;;ACOA;;;;;;AAeA;;;;ACrBA;;;;ACDA;;;;;;;ACkDA;;;;;;;;AAQA;;;;;AAMA;;;;;;;;;;;AAYA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAKA","sources":["webpack://cocokits/./packages/internal/storybook-addon-theme/src/lib/features/token-dictionary/token-dictionary-icons.tsx","webpack://cocokits/./packages/internal/storybook-addon-theme/src/lib/features/token-dictionary/token-dictionary-value.tsx","webpack://cocokits/./packages/internal/storybook-addon-theme/src/lib/features/token-dictionary/token-dictionary.tsx","webpack://cocokits/./packages/internal/storybook-addon-theme/src/lib/features/doc-page/doc-page-bg-effect.tsx","webpack://cocokits/./packages/internal/storybook-addon-theme/src/lib/features/doc-page/doc-page-header.tsx","webpack://cocokits/./packages/internal/storybook-addon-theme/src/lib/features/framework-selection/framework-selection-button.tsx","webpack://cocokits/./packages/internal/storybook-addon-theme/src/lib/features/doc-page/doc-page-nav.tsx","webpack://cocokits/./packages/internal/storybook-addon-theme/src/lib/features/doc-page/doc-page-toc.tsx","webpack://cocokits/./packages/internal/storybook-addon-theme/src/lib/features/doc-page/doc-page.tsx","webpack://cocokits/./packages/internal/storybook-addon-theme/src/lib/features/doc-page/doc-page-section.tsx","webpack://cocokits/./packages/internal/storybook-addon-theme/src/lib/features/story-doc-page/story-doc-page-api.tsx","webpack://cocokits/./packages/internal/storybook-addon-theme/src/lib/features/story-canvas/story.tsx","webpack://cocokits/./packages/internal/storybook-addon-theme/src/lib/features/story-source-code/story-source-code.tsx","webpack://cocokits/./packages/internal/storybook-addon-theme/src/lib/features/story-doc-page/story-doc-page-examples-canvas.tsx","webpack://cocokits/./packages/internal/storybook-addon-theme/src/lib/features/story-doc-page/story-doc-page-examples.tsx","webpack://cocokits/./packages/internal/storybook-addon-theme/src/lib/features/stackblitz/story-stackblitz-button.tsx","webpack://cocokits/./packages/internal/storybook-addon-theme/src/lib/features/story-control/story-single-control.tsx","webpack://cocokits/./packages/internal/storybook-addon-theme/src/lib/features/story-control/story-single-control-actions.tsx","webpack://cocokits/./packages/internal/storybook-addon-theme/src/lib/features/story-canvas/story-canvas.tsx","webpack://cocokits/./packages/internal/storybook-addon-theme/src/lib/features/story-doc-page/story-doc-page-overview.tsx","webpack://cocokits/./packages/internal/storybook-addon-theme/src/lib/preview/preview.ts","webpack://cocokits/./packages/react/overlay/src/components/overlay.tsx"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport styled from 'styled-components';\nexport function TokenColorIcon() {\n    return (_jsxs(StylesColorSvgIcon, { width: \"16\", height: \"16\", viewBox: \"0 0 16 16\", xmlns: \"http://www.w3.org/2000/svg\", children: [_jsx(\"path\", { d: \"M5.25 8C5.80228 8 6.25 7.55228 6.25 7C6.25 6.44772 5.80228 6 5.25 6C4.69772 6 4.25 6.44772 4.25 7C4.25 7.55228 4.69772 8 5.25 8Z\" }), _jsx(\"path\", { d: \"M8.75 5C8.75 5.55228 8.30229 6 7.75 6C7.19772 6 6.75 5.55228 6.75 5C6.75 4.44772 7.19772 4 7.75 4C8.30229 4 8.75 4.44772 8.75 5Z\" }), _jsx(\"path\", { d: \"M10.75 7C11.3023 7 11.75 6.55228 11.75 6C11.75 5.44772 11.3023 5 10.75 5C10.1977 5 9.75 5.44772 9.75 6C9.75 6.55228 10.1977 7 10.75 7Z\" }), _jsx(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M14 7.5C14 9.03144 12.6866 9.43713 11.669 9.75148C11.0253 9.9503 10.5 10.1126 10.5 10.5V11.5C10.5 13.5 9.04555 14 8 14C4.68629 14 2 11.3137 2 8C2 4.68629 4.68629 2 8 2C11.5 2 14 3.5 14 7.5ZM8 13C5.23858 13 3 10.7614 3 8C3 5.23858 5.23858 3 8 3C9.62994 3 10.864 3.35255 11.6768 4.02193C12.4539 4.66187 13 5.71978 13 7.5C13 7.85645 12.8893 8.0357 12.7546 8.16724C12.5832 8.33456 12.3107 8.47897 11.9137 8.62076C11.7383 8.68339 11.5622 8.73781 11.3722 8.79651L11.3117 8.81522C11.1118 8.87712 10.8809 8.94932 10.6717 9.03399C10.4724 9.11467 10.2052 9.23997 9.97809 9.44624C9.72138 9.67938 9.5 10.0345 9.5 10.5V11.5C9.5 12.2259 9.25348 12.5396 9.03769 12.7033C8.7743 12.9031 8.389 13 8 13Z\" })] }));\n}\nexport function TokenDimensionIcon() {\n    return (_jsx(StylesDimensionSvgIcon, { viewBox: \"0 0 17 18\", xmlns: \"http://www.w3.org/2000/svg\", children: _jsx(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M5.4597 0.670462C5.91803 0.712111 6.24803 1.11528 6.19803 1.57342L5.84303 4.76042H11.573L11.9447 1.42348C11.9947 0.967005 12.408 0.628812 12.8664 0.670462C13.3247 0.712111 13.6547 1.11528 13.6047 1.57342L13.2497 4.76042H15.833C16.293 4.76042 16.6664 5.1336 16.6664 5.59341C16.6664 6.05322 16.293 6.4264 15.833 6.4264H13.0664L12.5097 11.4243H15.833C16.293 11.4243 16.6664 11.7975 16.6664 12.2573C16.6664 12.7171 16.293 13.0903 15.833 13.0903H12.3247L11.9364 16.5772C11.8864 17.0336 11.473 17.3718 11.0147 17.3302C10.5564 17.2885 10.2264 16.8854 10.2764 16.4272L10.648 13.0903H4.91636L4.52969 16.5772C4.47969 17.0336 4.06636 17.3718 3.60803 17.3302C3.14969 17.2885 2.81803 16.8854 2.8697 16.4272L3.23969 13.0903H0.833028C0.373028 13.0903 -0.000305176 12.7171 -0.000305176 12.2573C-0.000305176 11.7975 0.373028 11.4243 0.833028 11.4243H3.42636L3.98136 6.4264H0.833028C0.373028 6.4264 -0.000305176 6.05322 -0.000305176 5.59341C-0.000305176 5.1336 0.373028 4.76042 0.833028 4.76042H4.16636L4.53803 1.42348C4.58803 0.967005 5.00136 0.628812 5.4597 0.670462ZM10.833 11.4243L11.388 6.4264H5.65803L5.10136 11.4243H10.833Z\" }) }));\n}\nexport function TokenTextIcon() {\n    return (_jsx(StylesTextSvgIcon, { viewBox: \"0 0 16 15\", xmlns: \"http://www.w3.org/2000/svg\", children: _jsx(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M2.49967 1.99967V2.67275C2.49967 3.13299 2.12658 3.50609 1.66634 3.50609C1.2061 3.50609 0.833008 3.13299 0.833008 2.67275V1.64711C0.833008 0.928888 1.4118 0.333008 2.14253 0.333008H14.5235C15.2542 0.333008 15.833 0.92889 15.833 1.64711V2.67275C15.833 3.13299 15.4599 3.50609 14.9997 3.50609C14.5394 3.50609 14.1663 3.13299 14.1663 2.67275V1.99967H9.16634V12.833H11.1902C11.6504 12.833 12.0235 13.2061 12.0235 13.6663C12.0235 14.1266 11.6504 14.4997 11.1902 14.4997H5.47587C5.01563 14.4997 4.64253 14.1266 4.64253 13.6663C4.64253 13.2061 5.01563 12.833 5.47587 12.833H7.49967V1.99967H2.49967Z\" }) }));\n}\nexport function TokenEffectIcon() {\n    return (_jsx(StylesEffectSvgIcon, { viewBox: \"0 0 512 512\", xmlns: \"http://www.w3.org/2000/svg\", children: _jsx(\"path\", { d: \"M280 24l0 64c0 13.3-10.7 24-24 24s-24-10.7-24-24l0-64c0-13.3 10.7-24 24-24s24 10.7 24 24zm157 84.9l-45.3 45.3c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9L403.1 75c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9zM108.9 75l45.3 45.3c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0L75 108.9c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0zM24 232l64 0c13.3 0 24 10.7 24 24s-10.7 24-24 24l-64 0c-13.3 0-24-10.7-24-24s10.7-24 24-24zm400 0l64 0c13.3 0 24 10.7 24 24s-10.7 24-24 24l-64 0c-13.3 0-24-10.7-24-24s10.7-24 24-24zM154.2 391.8L108.9 437c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l45.3-45.3c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9zm237.6-33.9L437 403.1c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-45.3-45.3c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0zM280 424l0 64c0 13.3-10.7 24-24 24s-24-10.7-24-24l0-64c0-13.3 10.7-24 24-24s24 10.7 24 24zm40-168a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-176 0a112 112 0 1 1 224 0 112 112 0 1 1 -224 0z\" }) }));\n}\nexport function TokenArrowDownIcon() {\n    return (_jsx(StylesArrowDownSvgIcon, { height: \"17\", viewBox: \"0 0 9 17\", xmlns: \"http://www.w3.org/2000/svg\", children: _jsx(\"path\", { d: \"M4.14645 16.3536C4.34171 16.5488 4.65829 16.5488 4.85355 16.3536L8.03553 13.1716C8.2308 12.9763 8.2308 12.6597 8.03553 12.4645C7.84027 12.2692 7.52369 12.2692 7.32843 12.4645L4.5 15.2929L1.67157 12.4645C1.47631 12.2692 1.15973 12.2692 0.964466 12.4645C0.769203 12.6597 0.769203 12.9763 0.964466 13.1716L4.14645 16.3536ZM4 1C4 1.27614 4.22386 1.5 4.5 1.5C4.77614 1.5 5 1.27614 5 1L4 1ZM5 3C5 2.72386 4.77614 2.5 4.5 2.5C4.22386 2.5 4 2.72386 4 3L5 3ZM4 5C4 5.27614 4.22386 5.5 4.5 5.5C4.77614 5.5 5 5.27614 5 5L4 5ZM5 7C5 6.72386 4.77614 6.5 4.5 6.5C4.22386 6.5 4 6.72386 4 7L5 7ZM4 9C4 9.27614 4.22386 9.5 4.5 9.5C4.77614 9.5 5 9.27614 5 9L4 9ZM5 11C5 10.7239 4.77614 10.5 4.5 10.5C4.22386 10.5 4 10.7239 4 11L5 11ZM4 13C4 13.2761 4.22386 13.5 4.5 13.5C4.77614 13.5 5 13.2761 5 13L4 13ZM5 15C5 14.7239 4.77614 14.5 4.5 14.5C4.22386 14.5 4 14.7239 4 15L5 15ZM4 -2.18557e-08L4 1L5 1L5 2.18557e-08L4 -2.18557e-08ZM4 3L4 5L5 5L5 3L4 3ZM4 7L4 9L5 9L5 7L4 7ZM4 11L4 13L5 13L5 11L4 11ZM4 15L4 16L5 16L5 15L4 15Z\" }) }));\n}\nexport function TokenArrowHeadRightIcon() {\n    return (_jsx(StylesArrowHeadIcon, { viewBox: \"0 0 8 14\", xmlns: \"http://www.w3.org/2000/svg\", children: _jsx(\"path\", { d: \"M5.53585 7L0.29285 1.72124C-0.0976156 1.32748 -0.0976165 0.689074 0.292849 0.295317C0.683314 -0.0984392 1.31638 -0.0984391 1.70685 0.295318L7.65674 6.28693C8.04727 6.68075 8.04727 7.31925 7.65674 7.71307L1.70685 13.7047C1.31638 14.0984 0.683314 14.0984 0.292849 13.7047C-0.0976164 13.3109 -0.0976162 12.6725 0.292849 12.2788L5.53585 7Z\" }) }));\n}\nexport function TokenArrowHeadLeftIcon() {\n    return (_jsx(StylesArrowHeadIcon, { viewBox: \"0 0 8 14\", xmlns: \"http://www.w3.org/2000/svg\", children: _jsx(\"path\", { d: \"M2.41379 7L7.65679 12.2788C8.04725 12.6725 8.04725 13.3109 7.65679 13.7047C7.26632 14.0984 6.63325 14.0984 6.24279 13.7047L0.292893 7.71307C-0.0976314 7.31925 -0.0976308 6.68075 0.292894 6.28693L6.24279 0.295317C6.63325 -0.0984392 7.26632 -0.0984391 7.65679 0.295318C8.04725 0.689074 8.04725 1.32748 7.65679 1.72124L2.41379 7Z\" }) }));\n}\nconst StylesArrowHeadIcon = styled.svg `\r\n    flex-shrink: 0;\r\n    width: 18px;\r\n    height: 14px;\r\n\r\n    & path {\r\n        fill: var(--cck-doc-color-font-3);\r\n    }\r\n`;\nconst StylesEffectSvgIcon = styled.svg `\r\n    flex-shrink: 0;\r\n    width: 18px;\r\n    height: 17px;\r\n    fill: var(--cck-doc-color-font-3);\r\n`;\nconst StylesTextSvgIcon = styled.svg `\r\n    flex-shrink: 0;\r\n    width: 13px;\r\n    height: 12px;\r\n    fill: none;\r\n\r\n    & path {\r\n        fill: var(--cck-doc-color-font-3);\r\n    }\r\n`;\nconst StylesDimensionSvgIcon = styled.svg `\r\n    flex-shrink: 0;\r\n    width: 14px;\r\n    height: 15px;\r\n    fill: none;\r\n\r\n    & path {\r\n        fill: var(--cck-doc-color-font-3);\r\n    }\r\n`;\nconst StylesColorSvgIcon = styled.svg `\r\n    flex-shrink: 0;\r\n    width: 20px;\r\n    height: 20px;\r\n    fill: none;\r\n\r\n    & path {\r\n        fill: var(--cck-doc-color-font-3);\r\n    }\r\n`;\nconst StylesArrowDownSvgIcon = styled.svg `\r\n    flex-shrink: 0;\r\n    width: 9px;\r\n    fill: none;\r\n\r\n    & path {\r\n        fill: var(--cck-doc-color-font-3);\r\n    }\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport styled, { css } from 'styled-components';\nimport { TokenColorIcon, TokenDimensionIcon, TokenEffectIcon, TokenTextIcon } from './token-dictionary-icons';\nexport function TokenDictionaryValue({ type, text, collectionName, modeName, compact = false }) {\n    return (_jsxs(StylesWrapper, { \"$hasGap\": !!collectionName || !!modeName, \"$compact\": compact, children: [_jsxs(StyledValueWrapper, { children: [getTokenIconType(type), _jsx(StyledValue, { \"$compact\": compact, children: text })] }), _jsxs(StyledGroupWrapper, { children: [collectionName &&\n                        _jsxs(StyledGroupRow, { children: [_jsx(StyledTitle, { children: \"Collection:\" }), _jsx(StyledText, { children: collectionName })] }), modeName &&\n                        _jsxs(StyledGroupRow, { children: [_jsx(StyledTitle, { children: \"Mode:\" }), _jsx(StyledText, { children: modeName })] })] })] }));\n}\nfunction getTokenIconType(type) {\n    switch (type) {\n        case 'color':\n            return _jsx(TokenColorIcon, {});\n        case 'dimension':\n            return _jsx(TokenDimensionIcon, {});\n        case 'typography':\n        case 'string':\n            return _jsx(TokenTextIcon, {});\n        case 'shadow':\n        default:\n            return _jsx(TokenEffectIcon, {});\n    }\n}\nconst StylesWrapper = styled.div `\r\n    width: fit-content;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 6px;\r\n\r\n    ${props => !props.$compact && css `\r\n      padding: 6px 12px;\r\n      background-color: var(--cck-doc-color-bg-1);\r\n      border: 1px solid var(--cck-doc-color-border-2);\r\n  `}\r\n\r\n    ${props => props.$compact && css `\r\n      padding: 2px 12px;\r\n    `}\r\n    \r\n    ${props => props.$hasGap && css `\r\n      gap: 12px;\r\n    `}\r\n`;\nconst StyledValueWrapper = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n`;\nconst StyledGroupWrapper = styled.div `\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\nconst StyledGroupRow = styled.div `\r\n    display: flex;\r\n    gap: 4px;\r\n`;\nconst StyledTitle = styled.div `\r\n    font: var(--cck-doc-text-xs-regular);\r\n    color: var(--cck-doc-color-font-4);\r\n`;\nconst StyledText = styled.div `\r\n    font: var(--cck-doc-text-xs-medium);\r\n    color: var(--cck-doc-color-font-2);\r\n`;\nconst StyledValue = styled.div `\r\n    font: var(--cck-doc-text-sm-medium);\r\n    color: var(--cck-doc-color-font-1);\r\n\r\n    ${props => props.$compact && css `\r\n      color: var(--cck-doc-color-font-3)\r\n    `}\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { getInstance, recordReduceMerge } from \"@cocokits/common-utils\";\nimport { Tab, Tabs } from \"@cocokits/react-tabs\";\nimport { getTokenList } from \"./token-dictionary.utils\";\nimport { TokenDictionaryValue } from \"./token-dictionary-value\";\nimport { GlobalEvent } from \"../../data-access/global-event/preview-global-event\";\nimport { useTheme } from \"../../utils/use-preview-theme\";\nexport function TokenDictionary() {\n    const globalEvent = getInstance(GlobalEvent);\n    const theme = useTheme();\n    const tokenDictionary = theme.tokenDictionary;\n    const [selectedCollection, setSelectedCollection] = useState(tokenDictionary.collectionNames[0].name);\n    const [selectedTokenId, setSelectedTokenId] = useState(null);\n    useEffect(() => {\n        const subscription = globalEvent.closeTokenInfo$.subscribe(() => {\n            setSelectedTokenId(null);\n        });\n        return () => {\n            subscription.unsubscribe();\n        };\n    }, []);\n    const modes = tokenDictionary.collectionModeNames[selectedCollection].map(mode => mode.name);\n    const tokensMaps = useMemo(() => {\n        return recordReduceMerge(tokenDictionary.collectionGroupHierarchy, (groupOrTokenIds, collectionName) => {\n            return { [collectionName]: getTokenList(groupOrTokenIds, tokenDictionary) };\n        });\n    }, [theme.id]);\n    const onCollectionTabClick = (event) => {\n        setSelectedCollection(event.value);\n    };\n    const onTokenClick = (tokenId) => {\n        globalEvent.dispatch.changeTokenInfo(tokenId);\n        setSelectedTokenId(tokenId);\n    };\n    return (_jsx(Tabs, { selectedValue: selectedCollection, onSelectionChange: onCollectionTabClick, children: tokenDictionary.collectionNames.map(collection => (_jsx(Tab, { label: collection.name, value: collection.name, children: _jsxs(StyledTable, { children: [_jsx(\"thead\", { children: _jsxs(\"tr\", { className: 'header', children: [_jsx(\"th\", { children: \"Name\" }), modes.map(mode => _jsx(\"th\", { children: mode }, mode))] }) }), _jsx(\"tbody\", { children: tokensMaps[selectedCollection].map(tokenOrGroupName => {\n                            if (typeof tokenOrGroupName === 'string') {\n                                return (_jsx(\"tr\", { className: 'group', children: _jsx(\"td\", { colSpan: modes.length + 1, children: tokenOrGroupName }) }, tokenOrGroupName));\n                            }\n                            return (_jsxs(\"tr\", { className: selectedTokenId === tokenOrGroupName.id ? 'selected' : '', onClick: () => onTokenClick(tokenOrGroupName.id), children: [_jsx(\"td\", { children: _jsx(StyledTableName, { children: tokenOrGroupName.namePath.at(-1) }) }), modes.map(mode => {\n                                        const aliasTokenId = tokenOrGroupName.modes[mode].aliasTokenId;\n                                        if (aliasTokenId) {\n                                            const aliasToken = tokenDictionary.tokenMap[aliasTokenId];\n                                            return (_jsx(\"td\", { children: _jsx(TokenDictionaryValue, { tokenId: aliasToken.id, type: aliasToken.type, text: aliasToken.namePath.join(' / '), compact: true }) }, aliasToken.id));\n                                        }\n                                        return (_jsx(\"td\", { children: _jsx(TokenDictionaryValue, { tokenId: tokenOrGroupName.id, type: tokenOrGroupName.type, text: tokenOrGroupName.modes[mode].value, compact: true }) }, tokenOrGroupName.id));\n                                    })] }, tokenOrGroupName.id));\n                        }) })] }) }, collection.rawName))) }));\n}\nconst StyledTable = styled.table `\r\n    border: none;\r\n    border-spacing: 0;\r\n    margin-top: 32px;\r\n    width: 100%;\r\n    \r\n    & th {\r\n        font: var(--cck-doc-text-sm-regular);\r\n        color: var(--cck-doc-color-font-1);\r\n        border: 1px solid var(--cck-doc-color-border-2);\r\n        border-left-width: 0;\r\n        height: 40px;\r\n        padding: 0 16px;\r\n        text-align: left;\r\n    }\r\n    \r\n    & tr:not(.group):not(.header) {\r\n        cursor: pointer;\r\n    }\r\n\r\n    & tr:not(.group):not(.selected):not(.header):hover {\r\n        background-color: var(--cck-doc-color-bg-hover-1);\r\n    }\r\n    \r\n    & tr.selected {\r\n        background-color: var(--cck-doc-color-bg-selected-1);\r\n    }\r\n\r\n    & th:first-of-type {\r\n        border-left-width: 1px;\r\n    }\r\n    \r\n    & tr.group td {\r\n        font: var(--cck-doc-text-sm-semibold);\r\n        color: var(--cck-doc-color-font-3);\r\n        min-height: 40px;\r\n        padding-top: 32px;\r\n        padding-bottom: 12px;\r\n        padding-left: 4px;\r\n    }\r\n\r\n    & tr.group + tr td {\r\n        border-top-width: 1px;\r\n    }\r\n    \r\n    & tr:not(.group) td {\r\n        border: 1px solid var(--cck-doc-color-border-1);\r\n        border-top-width: 0;\r\n        border-left-width: 0;\r\n        padding: 0 16px;\r\n    }\r\n\r\n    & tr:not(.group) td:first-of-type {\r\n        border-left-width: 1px;\r\n    }\r\n`;\nconst StyledTableName = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    font: var(--cck-doc-text-sm-regular);\r\n    color: var(--cck-doc-color-font-1);\r\n    min-height: 40px;\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport styled from 'styled-components';\nexport function DocPageBgEffect() {\n    return (_jsxs(Wrapper, { children: [_jsx(BrandGradient, {}), _jsxs(BoxWrapper, { children: [_jsx(Box, {}), _jsx(Box, {}), _jsx(Box, {}), _jsx(Box, {})] }), _jsx(SharkEffect, { children: _jsx(SharkEffectImg, { src: \"/images/doc-page-header-effect-shark.png\" }) }), _jsx(Surface, {})] }));\n}\n// region ---------------- STYLES ----------------\nconst Wrapper = styled.div `\r\n    height: 480px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    \r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n\r\n    overflow: hidden;\r\n`;\nconst BrandGradient = styled.div `\r\n    background: radial-gradient(\r\n      45% 66% at 50% 0%,\r\n      var(--cck-doc-color-main-effect-primary-start) 0%,\r\n      var(--cck-doc-color-main-effect-primary-end) 100%\r\n    );\r\n    height: 100%;\r\n    position: absolute;\r\n    width: 100%;\r\n`;\nconst BoxWrapper = styled.div `\r\n    position: absolute;\r\n    display: flex;\r\n    align-items: baseline;\r\n    gap: 24px;\r\n    height: 100%;\r\n    width: 1280px;\r\n`;\nconst Box = styled.div `\r\n    width: 25%;\r\n    aspect-ratio: 1 / 1;\r\n    flex: 1;\r\n    \r\n    border-width: 0 1px 0 1px;\r\n    border-style: solid;\r\n    border-color: rgba(255, 255, 255, 0.1);\r\n    border-radius: 24px;\r\n    background: linear-gradient(\r\n      180deg,\r\n      var(--cck-doc-color-main-effect-box-start) 0%,\r\n      var(--cck-doc-color-main-effect-box-end) 100%\r\n    );\r\n    transform: rotate(45deg);\r\n`;\nconst SharkEffect = styled.div `\r\n    position: absolute;\r\n    inset: -28px -24px;\r\n    opacity: 0.2;\r\n    z-index: 0;\r\n`;\nconst SharkEffectImg = styled.img `\r\n    width: 100%;\r\n`;\nconst Surface = styled.div `\r\n    background: radial-gradient(\r\n      45% 66% at 50% 0%,\r\n      var(--cck-doc-color-main-effect-surface-start) 0%,\r\n      var(--cck-doc-color-main-effect-surface-end) 100%\r\n    );\r\n\r\n    inset: -5px -18px -20px;\r\n    position: absolute;\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport styled from 'styled-components';\nimport { hasNotValue, toArray } from '@cocokits/common-utils';\nexport const DocPageHeader = ({ title, breadcrumb, ...props }) => {\n    const breadcrumbText = toArray(breadcrumb).join(' / ');\n    if (hasNotValue(title) && hasNotValue(breadcrumbText)) {\n        return null;\n    }\n    return (_jsxs(StyledHost, { ...props, children: [breadcrumbText && _jsx(StyledBreadcrumb, { children: breadcrumbText }), title && _jsx(\"h1\", { children: title })] }));\n};\n// region ---------------- STYLES ----------------\nconst StyledHost = styled.div `\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\nconst StyledBreadcrumb = styled.p.attrs({ role: 'navigation' }) `\r\n    font: var(--cck-doc-text-xs-medium);\r\n    color: var(--cck-doc-color-brand-default);\r\n    margin-bottom: 8px;\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport styled from 'styled-components';\nimport { FormField, Option, Select, SelectPreview } from '@cocokits/react-form-field';\nimport { useFramework } from './framework-selection.hooks';\nimport { ColorMode } from '../../model/theme.model';\nimport { useColorMode } from '../../utils/use-preview-color-mode';\nconst CustomPreview = ({ framework }) => {\n    const { colorMode } = useColorMode();\n    const isDark = colorMode === ColorMode.Dark;\n    if (framework === 'angular') {\n        return (_jsxs(StyledSelectPreview, { children: [_jsx(StyledOptionAngularImage, { src: \"logos/angular-icon-logo.png\", alt: \"Angular\" }), \"Angular\"] }));\n    }\n    if (framework === 'react') {\n        return (_jsxs(StyledSelectPreview, { children: [_jsx(StyledOptionReactImage, { src: isDark ? 'logos/react-icon-logo-light.svg' : 'logos/react-icon-logo-dark.svg', alt: \"React\" }), \"React\"] }));\n    }\n    return null;\n};\nexport function FrameworkSelectionButton() {\n    const framework = useFramework();\n    const { colorMode } = useColorMode();\n    const isDark = colorMode === ColorMode.Dark;\n    if (!framework) {\n        return;\n    }\n    const onFrameworkChange = ([selectedFramework]) => {\n        if (framework.toLocaleLowerCase() === selectedFramework.toLocaleLowerCase()) {\n            return;\n        }\n        const currentUrl = window.parent.location.href;\n        const newUrl = currentUrl.replace(framework.toLocaleLowerCase(), selectedFramework.toLocaleLowerCase());\n        const windowRoot = window.top ?? window;\n        windowRoot.location.href = newUrl;\n    };\n    return (_jsx(StyledFormField, { children: _jsxs(Select\n        // Value is just to force to render custom preview instead of placeholder. We don't use the selected value.\n        , { \n            // Value is just to force to render custom preview instead of placeholder. We don't use the selected value.\n            value: framework, onlyEmitOnValueChange: false, selectPreview: () => _jsx(CustomPreview, { framework: framework }), onChange: onFrameworkChange, children: [_jsxs(Option, { value: \"angular\", children: [_jsx(StyledOptionAngularImage, { src: \"logos/angular-icon-logo.png\", alt: \"Angular\" }), \"Angular\"] }), _jsxs(Option, { value: \"react\", children: [_jsx(StyledOptionReactImage, { src: isDark ? 'logos/react-icon-logo-light.svg' : 'logos/react-icon-logo-dark.svg', alt: \"React\" }), \"React\"] })] }) }));\n}\nconst StyledSelectPreview = styled(SelectPreview) `\r\n  display: flex;\r\n  align-items: center;\r\n  font: var(--cck-doc-text-sm-medium);\r\n  margin-right: 4px;\r\n`;\nconst StyledFormField = styled(FormField) `\r\n  .doc-cck-form-field__input-wrapper {\r\n    background-color: transparent;\r\n  }\r\n\r\n  &:hover .doc-cck-form-field__input-wrapper {\r\n    background-color: var(--cck-doc-color-bg-hover-1);\r\n  }\r\n`;\nconst StyledOptionAngularImage = styled.img `\r\n  width: 24px;\r\n  margin-right: 10px;\r\n`;\nconst StyledOptionReactImage = styled.img `\r\n  width: 20px;\r\n  margin-right: 12px;\r\n  margin-left: 2px;\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport styled from 'styled-components';\nimport { ColorModeButton } from '../color-mode/color-mode-button';\nimport { FrameworkSelectionButton } from '../framework-selection/framework-selection-button';\nimport { ThemeSelectionButton } from '../theme-selection/theme-selection-button';\nexport const DocPageNav = ({ hideThemeSwitcher = false }) => {\n    return (_jsxs(Nav, { children: [_jsx(FrameworkSelectionButton, {}), _jsx(StyledSpacer, {}), !hideThemeSwitcher && _jsx(ThemeSelectionButton, {}), _jsx(ColorModeButton, {})] }));\n};\n// region ---------------- STYLES ----------------\nconst Nav = styled.nav `\r\n    width: 100%;\r\n    height: 64px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n    gap: 24px;\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 10;\r\n    padding: 0 24px;\r\n    backdrop-filter: blur(25px);\r\n    -webkit-backdrop-filter: blur(25px); // Safari \r\n    border-bottom: 1px solid var(--cck-doc-color-border-2);\r\n`;\nconst StyledSpacer = styled.div `\r\n  flex: 1;\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { intersectionObserver$ } from '@cocokits/common-utils';\nimport { getPreparedItems, getSelectedStateValue } from './doc-page-toc.utils';\nconst INITIALIZE_SELECTED_STATE = {\n    top: 0,\n    height: 0,\n    selectedIdsMap: {},\n};\nexport const DocPageToc = ({ items, className }) => {\n    const [selectedState, setSelectedState] = useState(INITIALIZE_SELECTED_STATE);\n    const [preparedItems, setPreparedItems] = useState([]);\n    const indicatorRef = useRef(null);\n    useEffect(() => {\n        let subscriber = undefined;\n        const { unsubscribe: preparedItemsDestroy, items: preparedItemsPromise } = getPreparedItems(items);\n        setSelectedState(INITIALIZE_SELECTED_STATE);\n        const listenToVisibilityChange = (_preparedItems) => {\n            const itemsElement = _preparedItems.map((item) => item.element);\n            subscriber = intersectionObserver$(itemsElement, { threshold: [0, 0.1, 0.9, 1] })\n                .subscribe((event => {\n                setSelectedState((currentState) => getSelectedStateValue(currentState, _preparedItems, event));\n            }));\n        };\n        preparedItemsPromise.then((_preparedItems) => {\n            setPreparedItems(_preparedItems);\n            listenToVisibilityChange(_preparedItems);\n        });\n        return () => {\n            preparedItemsDestroy();\n            subscriber?.unsubscribe();\n        };\n    }, [items]);\n    const scrollToElement = (element) => {\n        if (!element) {\n            return;\n        }\n        const elementPosition = element.getBoundingClientRect().top + window.scrollY;\n        const navHeight = 80;\n        window.scrollTo({\n            top: elementPosition - navHeight,\n            behavior: 'smooth',\n        });\n    };\n    if (!items.length) {\n        return null;\n    }\n    return (_jsxs(StyledHost, { className: className, children: [_jsx(StyledHeader, { children: \"On this page\" }), _jsx(StyledIndicatorWrapper, { children: _jsx(StyledIndicator, { style: { top: `${selectedState.top}px`, height: `${selectedState.height}px` }, ref: indicatorRef }) }), _jsx(StyledItemsWrapper, { children: preparedItems.map((item) => (_jsx(StyledItem, { \"$selected\": selectedState.selectedIdsMap[item.id], onClick: () => scrollToElement(item.element), children: item.name }, item.id))) })] }));\n};\n// region ---------------- STYLES ----------------\nconst StyledHost = styled.div `\r\n  display: grid;\r\n  grid-template-columns: auto 1fr;\r\n  gap: 14px;\r\n  overflow-y: auto;\r\n  max-height: calc(100vh - 80px);\r\n  position: sticky;\r\n  flex-shrink: 0;\r\n  top: 80px;\r\n  margin-top: 96px;\r\n`;\nconst StyledHeader = styled.h5 `\r\n  grid-row: 1;\r\n  grid-column: 1 / -1;\r\n`;\nconst StyledIndicatorWrapper = styled.div `\r\n  grid-row: 2;\r\n  grid-column: 1;\r\n  width: 4px;\r\n  min-height: 0;\r\n  position: relative;\r\n  background-color: var(--cck-doc-color-bg-4);\r\n  border-radius: var(--cck-doc-radius-sm);\r\n  overflow: hidden;\r\n`;\nconst StyledIndicator = styled.div `\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: var(--cck-doc-color-brand-default);\r\n  border-radius: var(--cck-doc-radius-sm);\r\n  transition:\r\n    top 100ms,\r\n    height 100ms;\r\n`;\nconst StyledItemsWrapper = styled.div `\r\n  grid-row: 2;\r\n  grid-column: 2;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n`;\nconst StyledItem = styled.div `\r\n  font: var(--cck-doc-text-sm-regular);\r\n  color: ${({ $selected }) => ($selected ? 'var(--cck-doc-color-brand-default)' : 'var(--cck-doc-color-font-3)')};\r\n  cursor: pointer;\r\n  height: 40px; // Duplicate code with 'doc-page-toc.utils.ts/ITEM_HEIGHT'. Make sure both of them are in sync.\r\n  line-height: 40px;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n\r\n  &:hover {\r\n    color: ${({ $selected }) => ($selected ? 'var(--cck-doc-color-brand-default)' : 'var(--cck-doc-color-font-1)')};\r\n  }\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport styled from \"styled-components\";\nimport { DocPageBgEffect } from \"./doc-page-bg-effect\";\nimport { DocPageHeader } from \"./doc-page-header\";\nimport { DocPageNav } from \"./doc-page-nav\";\nimport { DocPageToc } from \"./doc-page-toc\";\nexport const DocPage = (props) => {\n    return (\n    // sb-unstyled class remove default storybook styles\n    _jsxs(StyledHost, { className: `sb-unstyled`, children: [_jsx(DocPageNav, {}), _jsx(DocPageBgEffect, {}), _jsxs(StyledContentWrapper, { children: [_jsx(StyledDocPageHeader, { title: props.title, breadcrumb: props.breadcrumb }), _jsx(StyledMain, { children: props.children }), props.tocItems && _jsx(StyledDocPageToc, { items: props.tocItems })] })] }));\n};\nconst StyledHost = styled.div `\r\n    background-color: var(--cck-doc-color-bg-1);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    height: 100%;\r\n`;\nconst StyledContentWrapper = styled.div `\r\n    display: grid;\r\n    grid-template-rows: auto 1fr;\r\n    grid-template-columns: 1fr auto;\r\n    position: relative;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    max-width: 1100px;\r\n    padding: 64px 48px 256px 48px;\r\n`;\nconst StyledDocPageHeader = styled(DocPageHeader) `\r\n  grid-row: 1;\r\n  grid-column: 1 / -1;  // spans all columns\r\n  margin: 2px;\r\n`;\nconst StyledMain = styled.main `\r\n  grid-row: 2;\r\n  grid-column: 1;\r\n  margin: 2px;\r\n  padding-bottom: 256px;\r\n  // TODO: With overflow hidden, the example can not be shown as full screen. Without it the tables in utils page will ake he whole with and we have horizontal scroll\r\n  // https://github.com/orgs/coco-base/projects/1/views/7?pane=issue&itemId=95572742\r\n  /* overflow: hidden; */\r\n`;\nconst StyledDocPageToc = styled(DocPageToc) `\r\n  grid-row: 2;\r\n  grid-column: 2;\r\n  min-width: 150px;\r\n  max-width: 250px;\r\n  margin: 2px;\r\n\r\n  overflow-y: auto;\r\n  max-height: calc(100vh - 80px);\r\n  align-self: start;\r\n  position: sticky;\r\n  flex-shrink: 0;\r\n  top: 80px;\r\n  margin-top: 0;\r\n  margin-left: 64px;\r\n\r\n  // IFrame inside of Storybook Doc page\r\n  @media (max-width: 880px) {\r\n    display: none;\r\n  }\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport styled from 'styled-components';\nimport { scrollToStoryById } from './doc-page.util';\nimport { DocPageMarkdown } from './doc-page-markdown';\nexport function DocPageSection({ id, title, description, children }) {\n    return (_jsxs(StyledHost, { id: id, children: [_jsxs(\"h2\", { children: [_jsx(StyledAnchor, { onClick: () => scrollToStoryById(id), \"aria-hidden\": \"true\", \"tab-index\": \"-1\", target: \"_self\", children: _jsx(\"svg\", { viewBox: \"0 0 16 16\", version: \"1.1\", width: \"16\", height: \"16\", \"aria-hidden\": \"true\", fill: \"currentColor\", children: _jsx(\"path\", { fillRule: \"evenodd\", d: \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\" }) }) }), title] }), description && _jsx(DocPageMarkdown, { children: description }), children] }));\n}\n// region ---------------- STYLES ----------------\nconst StyledHost = styled.div `\r\n  margin: 48px 0 0 0\r\n`;\nconst StyledAnchor = styled.a `\r\n    float: left;\r\n    width: 28px;\r\n    margin-left: -28px;\r\n    visibility: hidden;\r\n    cursor: pointer;\r\n\r\n    h2:hover > & {\r\n        visibility: visible;\r\n    }\r\n`;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { StoryDocPageApiTable } from './story-doc-page-api-table';\nimport { DocPageMarkdown } from '../doc-page/doc-page-markdown';\nimport { DocPageSection } from '../doc-page/doc-page-section';\nexport function StoryDocPageAPI({ argTypes, themeName }) {\n    const description = `Please verify that the \\`${themeName}\\` theme is also applied to your project to ensure consistency,\r\n  or change the theme of this document page to align with your project settings.\r\n  Mismatches between the theme of this document and your project can result in discrepancies in \\`type\\` definitions and \\`default\\` values,\r\n  as themes may vary in their specifications.`;\n    return (_jsxs(_Fragment, { children: [_jsx(DocPageMarkdown, { children: description }), argTypes.map((argType) => {\n                const isEmpty = !argType.argTypeGroup ||\n                    Object.keys(argType.argTypeGroup).length === 0 ||\n                    (argType.argTypeGroup.props.length === 0 &&\n                        argType.argTypeGroup.events.length === 0 &&\n                        argType.argTypeGroup.methods.length === 0);\n                return (_jsxs(DocPageSection, { id: argType.componentName, title: argType.componentName, children: [isEmpty && _jsx(\"p\", { children: \"This components has no API configuration\" }), argType.argTypeGroup?.props && argType.argTypeGroup?.props.length > 0 && (_jsxs(_Fragment, { children: [_jsx(\"h4\", { children: \"Properties\" }), _jsx(StoryDocPageApiTable, { argTypes: argType.argTypeGroup.props })] })), argType.argTypeGroup?.events && argType.argTypeGroup?.events.length > 0 && (_jsxs(_Fragment, { children: [_jsx(\"h4\", { children: \"Events\" }), _jsx(StoryDocPageApiTable, { hideDefault: true, argTypes: argType.argTypeGroup.events })] })), argType.argTypeGroup?.methods && argType.argTypeGroup?.methods.length > 0 && (_jsxs(_Fragment, { children: [_jsx(\"h4\", { children: \"Methods\" }), _jsx(StoryDocPageApiTable, { hideDefault: true, argTypes: argType.argTypeGroup.methods })] }))] }, argType.componentName));\n            })] }));\n}\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Story as StorybookStory } from \"@storybook/blocks\";\nimport { useEffect, useState } from \"react\";\nimport { filter, map, take } from \"rxjs\";\nimport { getInstance } from \"@cocokits/common-utils\";\nimport { Delay } from \"@cocokits/react-cdk\";\nimport { StoriesStore } from \"./stories.store\";\nimport { StyledLoader } from \"../../utils/common-elements\";\nimport { StoryControlStore } from \"../story-control/preview-story-args.store\";\nexport function Story({ story }) {\n    const [isArgsAvailable, setIsArgsAvailable] = useState(false);\n    const [canRenderStory, setCanRenderStory] = useState(false);\n    const storiesStore = getInstance(StoriesStore);\n    const controlStore = getInstance(StoryControlStore);\n    const of = story.moduleExport;\n    // Register/Remove story\n    useEffect(() => {\n        storiesStore.registerNewStory(story.id);\n        const subscription = storiesStore.canRenderStory$(story.id).subscribe(setCanRenderStory);\n        const subscription2 = controlStore.getArgs$(story.id).pipe(map((args) => Object.keys(args).length > 0), filter(Boolean), take(1)).subscribe(setIsArgsAvailable);\n        return () => {\n            storiesStore.removeStory(story.id);\n            subscription.unsubscribe();\n            subscription2.unsubscribe();\n        };\n    }, [story.id]);\n    if (canRenderStory && isArgsAvailable) {\n        return (_jsx(StorybookStory, { of: of }));\n    }\n    return (_jsx(Delay, { time: 100, children: _jsx(StyledLoader, {}) }));\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { ElementAnchorPoint } from '@cocokits/common-utils';\nimport { Delay } from '@cocokits/react-cdk';\nimport { FormField, Option, Select, SelectPreview } from '@cocokits/react-form-field';\nimport { useSourceCodeGenerator } from './use-source-code-generator';\nimport { StyledLoader } from '../../utils/common-elements';\nexport const StorySourceCode = forwardRef(({ story, pause, className }, ref) => {\n    const [selectedSourceIndex, setSelectedSourceIndex] = useState(0);\n    const { loading, sourceCodes } = useSourceCodeGenerator(story, pause);\n    if (loading) {\n        return (_jsxs(StyledHost, { className: className, \"$placeholder\": true, ref: ref, children: [_jsx(StyledLoader, {}), _jsx(\"p\", { children: \"Generating source code\" })] }));\n    }\n    if (sourceCodes.length === 0) {\n        return (_jsx(StyledHost, { className: className, \"$placeholder\": true, ref: ref, children: _jsx(\"p\", { children: \"No source code available for this component!\" }) }));\n    }\n    const selectedSource = sourceCodes[selectedSourceIndex];\n    const CustomPreview = () => (_jsx(SelectPreview, { children: _jsxs(StyleSelectPreviewText, { children: [sourceCodes.length, \" Files\"] }) }));\n    const onChange = ([index]) => {\n        setSelectedSourceIndex(index);\n    };\n    return (_jsxs(StyledHost, { className: className, ref: ref, children: [_jsxs(StyledHeader, { children: [_jsxs(StyledFilename, { children: [selectedSource.fileName, loading && (_jsx(Delay, { time: 100, children: _jsx(StyledLoader, {}) }))] }), sourceCodes.length > 1 && (_jsx(FormField, { children: _jsx(Select, { anchorPoint: ElementAnchorPoint.BottomRight, selectPreview: CustomPreview, value: selectedSourceIndex, onChange: onChange, children: sourceCodes.map((sourceCode, index) => (_jsx(Option, { value: index, children: sourceCode.fileName }, index))) }) }))] }), _jsx(StyledCode, { dangerouslySetInnerHTML: { __html: selectedSource?.html } })] }));\n});\nconst StyledHost = styled.div `\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100px;\r\n  margin: 8px;\r\n  background-color: var(--cck-doc-color-bg-3);\r\n  border-radius: var(--cck-doc-radius-md);\r\n\r\n  ${(props) => props.$placeholder &&\n    css `\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      gap: 12px;\r\n\r\n      & p {\r\n        margin: 0;\r\n      }\r\n    `}\r\n`;\nconst StyledHeader = styled.div `\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 8px 8px 8px 20px;\r\n  border-bottom: 1px solid var(--cck-doc-color-border-2);\r\n`;\nconst StyledFilename = styled.div `\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  font: var(--cck-doc-text-sm-medium);\r\n  color: var(--cck-doc-color-font-3);\r\n`;\nconst StyleSelectPreviewText = styled.span `\r\n  font: var(--cck-doc-text-sm-medium);\r\n  color: var(--cck-doc-color-font-3);\r\n`;\nconst StyledCode = styled.div `\r\n  position: relative;\r\n  padding: 20px 20px;\r\n  overflow: auto;\r\n  flex: 1;\r\n  margin-right: 4px;\r\n  scrollbar-color: var(--cck-doc-color-bg-5) var(--cck-doc-color-bg-3);\r\n\r\n  & pre {\r\n    margin: 0;\r\n    background-color: transparent !important;\r\n  }\r\n\r\n  & code {\r\n    background-color: transparent;\r\n    border: none;\r\n    padding: 0;\r\n  }\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useLayoutEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { Icons } from \"@cocokits/common-icons\";\nimport { IconButton } from '@cocokits/react-button';\nimport { SvgIcon } from '@cocokits/react-icon';\nimport { useStoryDocPageExampleStore } from './story-doc-page-examples.store';\nimport { Story } from '../story-canvas/story';\nimport { StoryCanvasWrapper } from '../story-canvas/story-canvas-wrapper';\nimport { StorySourceCode } from '../story-source-code/story-source-code';\nconst ANIMATION_OPTION = {\n    easing: 'ease-out',\n    fill: 'both',\n};\nexport function StoryDocPageExamplesCanvas({ index, story, className }) {\n    const [shouldShowSourceCode, setShouldShowSourceCode] = useState(false);\n    const hostRef = useRef(null);\n    const titleRef = useRef(null);\n    const descriptionRef = useRef(null);\n    const canvasContainerRef = useRef(null);\n    const sourceCodeRef = useRef(null);\n    const expandButtonRef = useRef(null);\n    const collapseButtonRef = useRef(null);\n    const store = useStoryDocPageExampleStore();\n    const parameters = story.parameters;\n    const title = story.name;\n    const description = parameters.docs.description.story;\n    useLayoutEffect(() => {\n        if (!store ||\n            !hostRef.current ||\n            !titleRef.current ||\n            !canvasContainerRef.current) {\n            return;\n        }\n        const subscription = store.getCellStyles$(index).subscribe((_styles) => {\n            const styles = _styles;\n            const options = { ...ANIMATION_OPTION, duration: styles.expandedChanged ? 300 : 0 };\n            // Just one time, because generate the source code const and we don't want to regenerate it.\n            if (styles.isExpanded) {\n                setShouldShowSourceCode(true);\n            }\n            Promise.all([\n                hostRef.current?.animate(styles.host, options),\n                titleRef.current?.animate(styles.title, options),\n                descriptionRef.current?.animate(styles.description, options),\n                canvasContainerRef.current?.animate(styles.canvasContainer, options),\n                sourceCodeRef.current?.animate(styles.sourceCode, options),\n                expandButtonRef.current?.animate(styles.expandButton, options),\n                collapseButtonRef.current?.animate(styles.collapseButton, options),\n            ]);\n        });\n        return () => {\n            subscription?.unsubscribe();\n        };\n    }, [\n        store,\n        index,\n        hostRef.current,\n        titleRef.current,\n        canvasContainerRef.current,\n        sourceCodeRef.current,\n        expandButtonRef.current,\n        collapseButtonRef.current,\n    ]);\n    const onCollapseClick = () => {\n        store?.setCellExpanded(index, false);\n    };\n    const onExpandClick = () => {\n        store?.setCellExpanded(index, true);\n    };\n    return (_jsxs(StyledHost, { ref: hostRef, className: className, children: [_jsx(StyledTitle, { ref: titleRef, children: title }), description && _jsx(StyledDescription, { ref: descriptionRef, children: description }), _jsx(StyledStoryCanvasContainer, { ref: canvasContainerRef, children: _jsxs(StyledStoryCanvasWrapper, { children: [_jsx(Story, { story: story }), _jsx(StyledCodeButton, { ref: expandButtonRef, onClick: onExpandClick, children: _jsx(SvgIcon, { icon: Icons.code }) })] }) }), _jsx(StyledStorySourceCode, { ref: sourceCodeRef, story: story, pause: !shouldShowSourceCode }), _jsx(StyledCloseButton, { ref: collapseButtonRef, onClick: onCollapseClick, children: _jsx(SvgIcon, { icon: Icons.close }) })] }));\n}\nconst StyledHost = styled.div `\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 6px;\r\n  padding: 0; // Expanded 24px\r\n`;\nconst StyledTitle = styled.div `\r\n  font: var(--cck-doc-text-sm-medium); // Expanded var(--cck-doc-text-xl-medium)\r\n  color: var(--cck-doc-color-font-1);\r\n  transition: inherit;\r\n  margin-bottom: 6px;\r\n`;\nconst StyledDescription = styled.p `\r\n  height: 0; // Expanded 24px\r\n  opacity: 0; // Expanded 1\r\n  margin-bottom: 0; // Expanded 16px\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  transition: inherit;\r\n  white-space: nowrap;\r\n`;\nconst StyledStoryCanvasContainer = styled.div `\r\n  // We can not add the border to the StoryCanvasWrapper directly because of subpixel rendering,\r\n  // will make the border blurry and sime times it will be behind the background\r\n  border: 1px solid var(--cck-doc-color-border-2);\r\n  border-radius: var(--cck-doc-radius-md);\r\n  transition: inherit;\r\n  height: 250px; // Expanded 270px;\r\n`;\nconst StyledStoryCanvasWrapper = styled(StoryCanvasWrapper) `\r\n  padding: 24px;\r\n  width: 100%;\r\n  height: 100%;\r\n  transition: inherit;\r\n  position: relative;\r\n\r\n  &:hover .doc-cck-icon-button {\r\n    opacity: 1;\r\n  }\r\n`;\nconst StyledStorySourceCode = styled(StorySourceCode) `\r\n  flex: 0; // Expanded: 1\r\n  opacity: 1; // Expanded: 1\r\n  min-height: 0;\r\n  overflow: hidden;\r\n  margin: 0; // Expanded 8px 0\r\n`;\nconst StyledCloseButton = styled(IconButton) `\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 12px;\r\n`;\nconst StyledCodeButton = styled(IconButton) `\r\n  position: absolute;\r\n  right: 4px;\r\n  bottom: 4px;\r\n  opacity: 0;\r\n  transition: 100ms opacity;\r\n`;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { DocsContext } from '@storybook/blocks';\nimport { useContext, useEffect, useLayoutEffect, useMemo, useRef } from 'react';\nimport styled from 'styled-components';\nimport { getInstance, ScrollLocker } from '@cocokits/common-utils';\nimport { useCreateStoryDocPageExampleStore } from './story-doc-page-examples.store';\nimport { StoryDocPageExamplesCanvas } from './story-doc-page-examples-canvas';\nimport { GlobalEvent } from '../../data-access/global-event/preview-global-event';\nimport { useTheme } from '../../utils/use-preview-theme';\nexport function StoryDocPageExamples() {\n    const { StoreProvider, store } = useCreateStoryDocPageExampleStore();\n    const globalEvent = getInstance(GlobalEvent);\n    const theme = useTheme();\n    const hostRef = useRef(null);\n    const context = useContext(DocsContext);\n    const stories = context.componentStories();\n    const filteredStories = useMemo(() => {\n        const _filteredStories = stories.filter((story) => {\n            const storyParameters = story.parameters;\n            const renderConditions = storyParameters.cckAddon.renderConditions ?? [];\n            return renderConditions.every((conditionFn) => conditionFn({\n                docPageTab: 'Examples',\n                theme: theme,\n                themeComponentConfig: theme.themeConfig.components[storyParameters.cckAddon.componentName],\n            }));\n        });\n        // Register New Story\n        _filteredStories.forEach((story) => {\n            globalEvent.dispatch.newStory(story);\n        });\n        return _filteredStories;\n    }, [stories]);\n    // Register Host Element\n    useLayoutEffect(() => {\n        if (hostRef.current) {\n            store.registerHostElement(hostRef.current, filteredStories.length);\n        }\n    }, [filteredStories]);\n    // Update Lock Scroll\n    // Update Grid Height\n    useEffect(() => {\n        const expandedSubscription = store.isCellExpanded$().subscribe((isCellExpanded) => {\n            isCellExpanded\n                ? ScrollLocker.globalInstance().lock()\n                : ScrollLocker.globalInstance().unlock();\n        });\n        const heightSubscription = store.getGridHeight$().subscribe((gridHeight) => {\n            if (hostRef.current) {\n                hostRef.current.style.height = `${gridHeight}px`;\n            }\n        });\n        return () => {\n            ScrollLocker.globalInstance().unlock();\n            expandedSubscription.unsubscribe();\n            heightSubscription.unsubscribe();\n        };\n    }, [hostRef.current]);\n    return (_jsx(StoreProvider, { value: store, children: _jsxs(StyledHost, { ref: hostRef, children: [filteredStories.map((story, index) => {\n                    return (_jsx(StyledStoryDocPageExamplesCanvas, { index: index, story: story }, story.id));\n                }), filteredStories.length === 0 && (_jsxs(_Fragment, { children: [_jsx(\"h2\", { children: \"Coming Soon\" }), _jsx(\"p\", { children: \"We are working hard to bring you more amazing and real use case examples for each component. Stay tuned!\" })] }))] }) }));\n}\nconst StyledHost = styled.div `\r\n  position: relative;\r\n  min-height: 70vh;\r\n`;\nconst StyledStoryDocPageExamplesCanvas = styled(StoryDocPageExamplesCanvas) `\r\n  position: absolute;\r\n`;\n","import { Fragment as _Fragment, jsx as _jsx } from \"react/jsx-runtime\";\nexport function StoryStackblitzButton(_props) {\n    return (_jsx(_Fragment, {}));\n    // const parameters = story.parameters as AddonParameters;\n    // const stackblitz = parameters.cckAddon?.stackblitz;\n    // if(!stackblitz) {\n    //   throw new Error('Stackblitz config has not found for story id: ' + story.id);\n    // }\n    // const framework = stackblitz.framework;\n    // if(!framework) {\n    //   throw new Error('Stackblitz framework has not found for story id: ' + story.id);\n    // }\n    // if(framework !== 'angular') {\n    //   throw new Error('Stackblitz framework is not supported: ' + framework);\n    // }\n    // const tsFile = stackblitz.tsFile;\n    // if(!tsFile) {\n    //   throw new Error('Stackblitz example files has not found for story id: ' + story.id);\n    // }\n    // const files = stackblitz.extraFiles ?? {}; \n    // const onButtonClick = () => {\n    //   sdk.openProject({\n    //     title: stackblitz.title || 'CocoKits Angular',\n    //     template: 'angular-cli',\n    //     dependencies: {\n    //       '@angular/animations': '18.2.0',\n    //       '@angular/common': '18.2.0',\n    //       '@angular/compiler': '18.2.0',\n    //       '@angular/core': '18.2.0',\n    //       '@angular/forms': '18.2.0',\n    //       '@angular/platform-browser': '18.2.0',\n    //       '@angular/router': '18.2.0',\n    //       '@cocokits/angular-components': 'latest',\n    //       '@cocokits/theme-cocokits': 'latest',\n    //       '@cocokits/theme-frames-x': 'latest',\n    //       '@cocokits/angular-utils': 'latest',\n    //       '@cocokits/common-utils': 'latest',\n    //       '@cocokits/core': 'latest',\n    //       '@cocokits/angular-core': 'latest',\n    //       '@cocokits/angular-icon': 'latest',\n    //       '@cocokits/angular-button': 'latest',\n    //       '@cocokits/angular-checkbox': 'latest',\n    //       '@cocokits/angular-radio': 'latest',\n    //       '@cocokits/angular-form-field': 'latest',\n    //       '@cocokits/angular-divider': 'latest',\n    //       '@cocokits/angular-menu': 'latest',\n    //       '@cocokits/angular-toggle': 'latest',\n    //       \"@swc/helpers\": \"~0.5.2\",\n    //       'rxjs': '7.8.1',\n    //       'tslib': '2.5.0',\n    //       'zone.js': '0.15.0'\n    //     },\n    //     files: {\n    //       ...files,\n    //       'src/example/example.component.ts': tsFile,\n    //       'src/global_styles.css': globalStyles,\n    //       'src/index.html': index,\n    //       'src/main.ts': main,\n    //       '.npmrc': npmrc,\n    //       'angular.json': angularJson,\n    //       'package.json': packageJson,\n    //       'tsconfig.app.json': tsconfigAppJson,\n    //       'tsconfig.json': tsconfigJson,\n    //     }\n    //   }, {\n    //     openFile: 'example/example.component.ts',\n    //     newWindow: true,\n    //     startScript: 'npm i && npm start'\n    //   });\n    // };\n    // return (\n    //   <Button onClick={onButtonClick}>\n    //     <SvgIcon icon={Icons.stackblitz}/>\n    //     Stackblitz\n    //   </Button>\n    // );\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { getInstance, hasNotValue } from '@cocokits/common-utils';\nimport { FormField, Option, Select, SelectPreview } from '@cocokits/react-form-field';\nimport { StoryControlStore } from './preview-story-args.store';\nimport { AddonParametersControlType } from '../../model/addon.model';\nimport { useTheme } from '../../utils/use-preview-theme';\nexport function StorySingleControl({ story, argName }) {\n    const theme = useTheme();\n    const storyControlStore = getInstance(StoryControlStore);\n    const [selectedValue, setSelectedValue] = useState();\n    const [control, setControl] = useState();\n    useEffect(() => {\n        const subscription = storyControlStore.getState$(story.id).subscribe((state) => {\n            const parameters = story.parameters;\n            const themeComponentConfig = theme.themeConfig.components[parameters.cckAddon.componentName];\n            if (!themeComponentConfig || !(argName in themeComponentConfig)) {\n                setControl(undefined);\n                setSelectedValue(undefined);\n                return;\n            }\n            const targetControl = state.controls.find((_control) => _control.storyArgKey === argName);\n            const value = state.args[argName];\n            if (!targetControl) {\n                throw new Error(`CckControl not found for story ID: ${story.id} and arg name: ${argName}`);\n            }\n            if (targetControl.type !== AddonParametersControlType.Select) {\n                throw new Error(`singleControls accept only Select control type, but got ${targetControl.type} for story ID: ${story.id} and arg name: ${argName}`);\n            }\n            if (hasNotValue(value)) {\n                throw new Error(`The argument '${argName}' does not exist in the CckControls configuration for story ID '${story.id}'.`);\n            }\n            setControl(targetControl);\n            setSelectedValue(value);\n        });\n        return () => {\n            subscription.unsubscribe();\n        };\n    }, [story, theme.id]);\n    if (!control || !selectedValue) {\n        return;\n    }\n    const onSelectValueChange = (selectedValues) => {\n        storyControlStore.updateStoryArgs(story.id, { [argName]: selectedValues[0] });\n    };\n    const CustomSelectPreview = () => (_jsxs(SelectPreview, { children: [_jsx(StyledSelectPreviewType, { children: control.displayName }), selectedValue] }));\n    return (_jsx(StyledFormField, { children: _jsx(Select, { selectPreview: CustomSelectPreview, value: selectedValue, onChange: onSelectValueChange, children: control.options.map((value, index) => (_jsx(Option, { value: value, children: value }, index))) }) }));\n}\nconst StyledFormField = styled(FormField) `\r\n  min-width: 150px;\r\n`;\nconst StyledSelectPreviewType = styled.span `\r\n  font: var(--cck-doc-text-sm-regular);\r\n  color: var(--cck-doc-color-font-3);\r\n  margin-right: 8px;\r\n`;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport styled from 'styled-components';\nimport { StorySingleControl } from './story-single-control';\nexport function StorySingleControlActions({ story }) {\n    const parameters = story.parameters;\n    const singleControls = parameters.cckAddon.singleControls;\n    if (!singleControls || singleControls.length === 0) {\n        return;\n    }\n    if (!story.argTypes['cckControl']) {\n        throw new Error(`'cckControl' argTypes is missing for story ID: ${story.id}`);\n    }\n    return (_jsx(StyledHost, { children: singleControls.map((argName, index) => (_jsx(StorySingleControl, { story: story, argName: argName }, index))) }));\n}\nconst StyledHost = styled.div `\r\n  position: absolute;\r\n  bottom: 8px;\r\n  left: 8px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n  z-index: 1;\r\n`;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { getInstance } from \"@cocokits/common-utils\";\nimport { Story } from \"./story\";\nimport { StoryCanvasActions } from \"./story-canvas-actions\";\nimport { StoryCanvasWrapper } from \"./story-canvas-wrapper\";\nimport { GlobalEvent } from \"../../data-access/global-event/preview-global-event\";\nimport { StorySingleControlActions } from \"../story-control/story-single-control-actions\";\nimport { StorySourceCode } from \"../story-source-code/story-source-code\";\nexport function StoryCanvas({ story }) {\n    const [isCodeSelected, setIsCodeSelected] = useState(false);\n    useEffect(() => {\n        getInstance(GlobalEvent).dispatch.newStory(story);\n    }, []);\n    const onCodeClick = () => setIsCodeSelected(!isCodeSelected);\n    return (_jsxs(StyledHost, { children: [_jsxs(StyledStoryCanvasWrapper, { children: [_jsx(Story, { story: story }), _jsx(StoryCanvasActions, { story: story, isCodeSelected: isCodeSelected, onCodeClick: onCodeClick }), _jsx(StorySingleControlActions, { story: story })] }), isCodeSelected && _jsx(StorySourceCode, { story: story })] }));\n}\nconst StyledHost = styled.div `\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid var(--cck-doc-color-border-2);\r\n  border-radius: var(--cck-doc-radius-md);\r\n  margin: 48px 0;\r\n`;\nconst StyledStoryCanvasWrapper = styled(StoryCanvasWrapper) `\r\n  padding: 48px 48px 56px 48px;\r\n  min-height: 270px;\r\n  width: 100%;\r\n`;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { DocPageMarkdown } from \"../doc-page/doc-page-markdown\";\nimport { DocPageSection } from \"../doc-page/doc-page-section\";\nimport { StoryCanvas } from \"../story-canvas/story-canvas\";\nexport function StoryDocPageOverview({ metaDescription, stories }) {\n    const getDescription = (story) => {\n        const parameters = story.parameters;\n        return parameters.docs.description.story;\n    };\n    return (_jsxs(_Fragment, { children: [_jsx(DocPageMarkdown, { children: metaDescription }), stories.map(story => (_jsx(DocPageSection, { id: story.id, title: story.name, description: getDescription(story), children: _jsx(StoryCanvas, { story: story }) }, story.id)))] }));\n}\n","import { WithStoryDecorator } from './with-story-decorator';\nimport { WithThemeProvider } from './with-theme-provider';\nimport { StoryDocPage } from '../features/story-doc-page/story-doc-page';\nexport const preview = {\n    decorators: [WithStoryDecorator],\n    tags: ['autodocs'],\n    parameters: {\n        docs: {\n            container: WithThemeProvider,\n            page: StoryDocPage,\n        },\n    },\n};\nexport default preview;\nexport const globals = {};\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useEffect, useLayoutEffect, useRef } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { useUiBaseComponentConfig } from \"@cocokits/react-core\";\nimport { OverlayContext, useOverlayAnimation } from \"./overlay.hooks\";\nexport const Overlay = (props) => {\n    const containerRef = useRef(null);\n    const backdropRef = useRef(null);\n    const contentRef = useRef(null);\n    const { classNames, hostClassNames } = useUiBaseComponentConfig({\n        componentName: 'overlay',\n        props: {},\n        extraHostElementClassConditions: [\n            { if: true, classes: () => props.config.panelClass },\n        ],\n    });\n    const { runEnterAnimation, runExitAnimation } = useOverlayAnimation({\n        config: props.config,\n        containerRef,\n        contentRef,\n        backdropRef,\n    });\n    const onBackdropClick = () => {\n        if (props.config.disableBackdropClose) {\n            return;\n        }\n        props.closedPromise.resolve();\n    };\n    useEffect(() => {\n        return () => props.afterClosedPromise.resolve();\n    }, []);\n    useLayoutEffect(() => {\n        props.closedPromise.promise.then(async (result) => {\n            await runExitAnimation();\n            props.afterClosedPromise.resolve(result);\n        });\n        runEnterAnimation();\n    }, []);\n    const overlayRef = {\n        data: props.config.data,\n        close: (result) => {\n            props.closedPromise.resolve(result);\n        },\n    };\n    return (_jsx(OverlayContext.Provider, { value: overlayRef, children: _jsxs(StyledContainer, { ref: containerRef, className: hostClassNames, \"$allowInteraction\": props.config.allowInteractionBehindOverlay, \"$zIndex\": props.config.zIndex, children: [props.config.hasBackdrop && (_jsx(StyledBackdrop, { ref: backdropRef, className: classNames.backdrop, onClick: onBackdropClick })), _jsx(StyledContentWrapper, { \"$size\": props.config.size, ref: contentRef, className: classNames.contentWrapper, children: props.children })] }) }));\n};\nconst StyledContainer = styled.div `\r\n  :where(&) {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: ${props => props.$zIndex};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    perspective: 1000px;\r\n    touch-action: auto;\r\n    pointer-events: auto;\r\n    \r\n    ${props => props.$allowInteraction && css `\r\n      touch-action: none;\r\n      pointer-events: none;\r\n    `}\r\n  }\r\n`;\nconst StyledBackdrop = styled.div `\r\n  :where(&) {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: -1;\r\n    touch-action: initial;\r\n    pointer-events: initial;\r\n  }\r\n`;\nconst StyledContentWrapper = styled.div `\r\n  :where(&) {\r\n    position: relative;\r\n    top: 0;\r\n    left: 0;\r\n    touch-action: initial;\r\n    pointer-events: initial;\r\n\r\n    ${props => css `\r\n        height: ${props.$size?.height};\r\n        max-height: ${props.$size?.maxHeight};\r\n        max-width: ${props.$size?.maxWidth};\r\n        min-height: ${props.$size?.minHeight};\r\n        min-width: ${props.$size?.minWidth};\r\n        width: ${props.$size?.width};\r\n    `};\r\n\r\n  }\r\n`;\nOverlay.displayName = 'Overlay';\nexport default Overlay;\n"],"names":[],"sourceRoot":""}